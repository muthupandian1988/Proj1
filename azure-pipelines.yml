trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
  - stage: BuildStage
    displayName: 'Build'
    jobs:
      - job: Buildjob
        steps:
        
        - task: DotNetCoreCLI@2
          displayName: 'Restore Nuget' 
          inputs:
            command: 'restore'
            projects: '$(solution)'
            feedsToUse: 'select'

        - task: DotNetCoreCLI@2
          displayName: 'Build solution' 
          inputs:
            projects: '$(solution)'
            command: 'build'
            arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'

        - task: DotNetCoreCLI@2
          displayName: 'Publish solution' 
          inputs:
            projects: '$(solution)'
            command: 'publish'
            configuration: '--c $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        - task: DotNetCoreCLI@2
          displayName: 'Run tests'
          inputs:
            command: 'test'
            projects: 'TestProject\TestProject.csproj'
            arguments: '--configuration $(BuildConfiguration) --collect:"XPlat Code Coverage"'
        - task: PublishCodeCoverageResults@2
          displayName: 'Publish code coverage' 
          inputs:
            failIfCoverageEmpty: true
            summaryFileLocation: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'

        - task: PublishBuildArtifacts@1
          displayName: 'Drop artifact' 
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'

  - stage: DeployStage
    displayName: 'Deploy'
    jobs:
      - job:
        steps:
        - task: DownloadBuildArtifacts@1
          inputs:
            buildType: 'current'
            downloadType: 'single'
            artifactName: 'drop'
            downloadPath: '$(System.ArtifactsDirectory)'
        - powershell: |
            Compress-Archive -Path "$(System.ArtifactsDirectory)/drop/*" -DestinationPath "$(System.ArtifactsDirectory)/drop.zip" -Force

        - task: AzureRmWebAppDeployment@4
          inputs:
            ConnectionType: 'AzureRM'
            azureSubscription: 'DevopsLearnAppService'
            appType: 'webApp'
            WebAppName: 'Dev-DevOpsLearn'
            packageForLinux: '$(System.ArtifactsDirectory)/**/*.zip'
        

          
        


trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '$(solution)'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  inputs:
    projects: '$(solution)'
    command: 'build'
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'

- script: echo "Variable name before publish:$(Build.ArtifactStagingDirectory)"
- task: DotNetCoreCLI@2
  inputs:
    projects: '$(solution)'
    command: 'publish'
    configuration: '--c $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
- task: DotNetCoreCLI@2
  displayName: 'Run tests'
  inputs:
    command: 'test'
    projects: 'TestProject\TestProject.csproj'
    arguments: '--configuration $(BuildConfiguration) --collect:"XPlat Code Coverage"'
- task: PublishCodeCoverageResults@2
  inputs:
    failIfCoverageEmpty: true
    summaryFileLocation: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Free Trial(2ab0ff65-ee81-4818-8778-7996eb386985)'
    appType: 'webApp'
    WebAppName: 'DevopsLearn'
    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'

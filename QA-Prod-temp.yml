stages:
  

  - stage: DeployStage
    displayName: "Deployed to App service"
    dependsOn: ChooseEnvStage
    jobs:
      - job: ChooseEnvJob
        steps:
        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: |
              # Write your commands here
              env="$(./1.sh env $(Build.SourceBranchName))"
              echo "##vso[task.setvariable variable=env;isOutput=true]$env"       
        
        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: |
             # Write your commands here
             appservice="$(./1.sh appservice $(Build.SourceBranchName))"
             echo "##vso[task.setvariable variable=appservice;isOutput=true]$appservice"
      - deployment: $env
        displayName: $env
        environment: $env
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadPipelineArtifact@2
                  inputs:
                    buildType: 'current'
                    artifactName: 'drop'
                    targetPath: '$(Pipeline.Workspace)/drop'
            
                - powershell: |
                    Compress-Archive -Path "$(Pipeline.Workspace)/drop/*" -DestinationPath "$(Pipeline.Workspace)/drop.zip" -Force

                - task: AzureRmWebAppDeployment@4
                  inputs:
                    ConnectionType: 'AzureRM'
                    azureSubscription: 'DevopsLearnAppService'
                    appType: 'webApp'
                    WebAppName: $appservice
                    packageForLinux: '$(Pipeline.Workspace)/**/*.zip'